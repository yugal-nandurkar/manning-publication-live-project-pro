#! /usr/bin/env python

import subprocess
import argparse
import sys



def main():


	dns_server = "cs5700cdnproject.ccs.neu.edu"
	
	replica_servers=["ec2-52-0-73-113.compute-1.amazonaws.com","ec2-52-16-219-28.eu-west-1.compute.amazonaws.com","ec2-52-11-8-29.us-west-2.compute.amazonaws.com",
"ec2-52-8-12-101.us-west-1.compute.amazonaws.com","ec2-52-28-48-84.eu-central-1.compute.amazonaws.com","ec2-52-68-12-77.ap-northeast-1.compute.amazonaws.com",
"ec2-52-74-143-5.ap-southeast-1.compute.amazonaws.com","ec2-52-64-63-125.ap-southeast-2.compute.amazonaws.com","ec2-54-94-214-108.sa-east-1.compute.amazonaws.com"]
	


	#replica_servers=["ec2-52-0-73-113.compute-1.amazonaws.com"]
	
	parse = argparse.ArgumentParser(description="Deploying the CDN")
	parse.add_argument("-p", dest="port",help='high-numbered port 40000-65535',type=int)
	parse.add_argument("-o", dest="origin",help='server from which content would be fetched')
	parse.add_argument("-n", dest="name",help='cdn specific name')
	parse.add_argument("-u", dest="username",help='user who runs this script')
	parse.add_argument("-i", dest="keyfile",help='keyfile for ssh')

	arguments = parse.parse_args()
	if arguments.port is None:
		print("Please specify the port number")
		sys.exit()
	port = int(arguments.port)
	
	if arguments.origin is None:
		print("Please specify the origin server")
		sys.exit()
	origin = arguments.origin
	
	if arguments.name is None:
		print("Please specify the cdn specific name")
		sys.exit()
	name = arguments.name

	if arguments.username is None:
		print("Please specify the username")
		sys.exit()
	username = arguments.username

	if arguments.keyfile is None:
		print("Please specify the path to key file")
		sys.exit()
	keyfile = arguments.keyfile


	run_http_servers(replica_servers,port,origin,name,username,keyfile)
	run_dns_servers(replica_servers,port,origin,name,username,keyfile,dns_server)




def run_http_servers(replica_servers,port,origin,name,username,keyfile):

	for each_replica in replica_servers:		
		work =subprocess.check_output("ssh -i "+keyfile+" "+username+"@"+each_replica+" '"+"DISPLAY=:0 ./httpserver -p "+str(port)+" -o "+origin+"< /dev/null > std.out 2> std.err &"+"'",shell=True)

		#print "ssh -i "+keyfile+" "+username+"@"+each_replica+" '"+" ./httpserver -p "+port+" -o "+origin+"'"
		
	#print "Started HTTPSERVER"

def run_dns_servers(replica_servers,port,origin,name,username,keyfile,dns_server):
	port1 = str(port)
	dns_ssh = subprocess.check_output("ssh -i "+keyfile+" "+username+"@"+dns_server+" '"+"DISPLAY=:0 ./dnsserver -p "+port1+" -n "+name+"< /dev/null > std.out2> std.err &"+"'",shell=True) 
	#dns_ssh = subprocess.check_output("ssh -i "+keyfile+" "+username+"@"+dns_server+" '"+" ./dnsserver -p "+port+" -n "+name+"'",shell=True)
	#print "Started DNSSERVER"


main()
