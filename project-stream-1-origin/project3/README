Approach
Task is to analyze the behaviour of the TCP variants using metrics like average throughput, no of packets dropped and latency under different conditions such asCongestion,
Fairness,
Influence of Queuing

Congestion- Setup the topology as given in the project description page. n2->n3:CBR over UDP, n1->n4:TCP. To test the TCP variant's behaviour under congestion, we analyze the link n2->n3 whose bandwidth is shared between TCP and UDP. Now to introduce a fair amount of congestion, increase the CBR rate and analyze the congestion window, no of packets dropped, throughput and latency. Also try diffeent combinations by starting TCP at n1 and CBR over UDP at n2 together, n1 after n2 and finally n2 after n1. Since each variant implements a different combinationof algorithms to handle congestion, we have to analyze all the TCP variants and quantify the results by computing the average result over a large number of comparisons. Computing the standard deviation may help us understand what contributes to a particular behaviour.

Fairness- To analyze fairness the topology is pretty much the same, except here we introuduce another CP variant to test if TCP variant X is fair to TCP variant Y and vice-versa. Here N1 will implement TCP variant X and it's sink at N5, N4 will implement TCP variant Y and it's sink at N6. N2->N3: CBR over UDP, N1->N4: TCP flow of variant X, N5->N6: TCP flow of variant Y. Since there are two variants in the same link, by analyzing their average throughput we can determine if we can determine if any variant dominates the other variant over the available bandwidth in shared link N2->N3. The no of packets dropped can also be used as a factor to analyze fairness. To make sure noise isn't a contributing factor, analyze the mean/medians and if there is high variability, then it's likely due to noise while on the other low variability implies it's likely due to the implementation of the algorithm. Compare the number of packets dropped when only one of the variant uses the entire bandwidth. By this we can conclude if a particular variant X dominates the bandwidth to cause the other variant Y to drop packets.

Infulence of Queuing- To analyze the performance of different variants when it implements the different queuing strategies like droptail and Random Early Drop(RED). Setup the topology as before N1->N4: TCP flow, N5->N6: CBR over UDP. Wait until TCP flow is constant and then start CBR. Also try starting CBR before TCP, both at the same time and TCP before CBR. Analyze the performance of the TCP variants over different queuing strategies i.e when it implements a droptail queue and when it implements a RED queue. Anaylze the performance of the TCP variants over different queuing strategies i.e. when it implements a droptail queue and when it implements a RED queue. Parse the generated tracefile by writing python scripts and plot the same using xgraph.

-------------------------------------------------------------------------------------------
To carry out the experiments, firstly we built the topology in a tcl file and set up the simulation environment accordingly for experiment 1,2 and 3.
For each of these experiments, we wrote separate parse files to parse the trace files generated. In these parse files, we extracted the needed values from the trace file to calculate throughput, latency, packet drops. We also wrote automation scripts to increment the cbr from 1 to the bandwidth capacity by incrementing in intervals of 0.1 for the experiment 1 and 2. For experiment 3, in the automated scripts we passed the time to tcl file from the first second till the finish time which is 25sec. The required values are then written into new textfiles from which we extract the values and plot the graphs in excel. All thecalculations including standard deviations, averages are done in excel.



